name: Night Build

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t shuqingzou/fastapi-app:latest .
          docker push shuqingzou/fastapi-app:latest

  tests:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DATABASE_URL=postgresql+asyncpg://postgres:testpass@db:5432/bookly" >> .env
          echo "JWT_SECRET=NMM3S-MBAVTGWggt0ISI_3NY9eebmMBBSi4hR_rwKko" >> .env
          echo "JWT_ALGORITHM=HS256" >> .env
          echo "REDIS_URL=redis://redis:6379/0" >> .env
          echo "MAIL_USERNAME=bryana.fay71@ethereal.email" >> .env
          echo "MAIL_PASSWORD=6XF4g3kB5xSBngJxBt" >> .env
          echo "MAIL_SERVER=smtp.ethereal.email" >> .env
          echo "MAIL_PORT=587" >> .env
          echo "MAIL_FROM=bryana.fay71@ethereal.email" >> .env
          echo "MAIL_FROM_NAME=BryanaFay" >> .env
          echo "DOMAIN=http://localhost:8000" >> .env

      - name: Print .env file (Debugging)
        run: cat .env

      - name: Build and Start Services
        run: |
          docker compose build
          docker compose up -d
          sleep 10
          docker compose ps

      - name: Debug All Containers Logs (if failed)
        if: failure()
        run: docker compose logs

      - name: Check if mail.py exists
        run: |
          if [ ! -f "src/mail.py" ]; then
            echo "Error: src/mail.py not found!"
            exit 1
          fi
          
      - name: Debug Environment Variables (Check SMTP Config)
        run: |
          echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}"
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}"
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}"
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}"
          echo "MAIL_FROM=${{ secrets.MAIL_FROM }}"

      - name: Notify Build Result
        env:
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
        run: |
          chmod +x src/mail.py
          if [[ "${{ job.status }}" == "success" ]]; then
            python3 src/mail.py "Nightly Build Succeeded" "The nightly build completed successfully. Everything is working!" "bryana.fay71@ethereal.email"
          else
            python3 src/mail.py "Nightly Build Failed" "The build and start process failed. Please check logs." "bryana.fay71@ethereal.email"
          fi